package org.briansimulator.briandroid.Simulations;

import android.os.AsyncTask;
import android.util.Log;
import android.widget.TextView;

import java.io.File;
import java.io.IOException;
import java.lang.reflect.Method;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLClassLoader;

/**
 * Created by Achilleas Koutsou on 31/07/13.
 *
 * The SimRunner class handles running of standalone simulations generated by
 * the Brian2 codegen module.
 *
 */
public class SimRunner extends AsyncTask<Void, String, Void> {
    final static String LOGID = "org.briansimulator.briandroid.Simulations.SimRunner";
    protected TextView progressText;
    Class simClass;


    public void SimRunner(Class cl) {
        // not sure if this is necessary - might be simpler to just use this class
        // to load classes
        setSimClass(cl);
    }

    public void SimRunner(String class_location_str) {
        // TODO: check file type here???
        File class_location;
        File class_directory = null;
        Class simclass;
        String class_filename = "";
        try {
            class_location = (new File(class_location_str)).getCanonicalFile();
            class_directory = class_location.getAbsoluteFile().getParentFile();
            class_filename = class_location.getName().replace(".class", "");
            URL class_directory_url = class_directory.toURI().toURL();
            ClassLoader loader = new URLClassLoader(new URL[] {class_directory_url});
            simclass = loader.loadClass(class_filename);
            setSimClass(simclass);
        } catch (MalformedURLException mue) {
            Log.d(LOGID, "Malformed URL while converting "+class_directory.toString());
            Log.d(LOGID, "Trace follows:");
            mue.printStackTrace();
        } catch (IOException ioe) {
            Log.d(LOGID, "OIException reading file "+class_location_str);
            Log.d(LOGID, "Trace follows:");
            ioe.printStackTrace();
        } catch (ClassNotFoundException cnfe) {
            Log.d(LOGID, "ClassNotFoundException loading file "+class_filename);
        }
    }

    public void setSimClass(Class cl) {
        simClass = cl;
    }


    protected Void doInBackground(Void... _) {
        Method simSetup, simRun;
        try {
            simSetup = simClass.getDeclaredMethod("setup", (Class)null);
        } catch (NoSuchMethodException nsme) {
            Log.d(LOGID, "Class "+simClass.getName()+" does not declare setup() method.");
            nsme.printStackTrace();
            return null;
        }
        try {
            simRun = simClass.getDeclaredMethod("run", (Class)null);
        } catch (NoSuchMethodException nsme) {
            Log.d(LOGID, "Class "+simClass.getName()+" does not declare run() method.");
            nsme.printStackTrace();
            return null;
        }
        try {
            simSetup.invoke(simClass, (Object)null);
            simRun.invoke(simClass, (Object)null);
        } catch (Exception e) {  // TODO: Catch exceptions properly
            Log.d(LOGID, "Error running simulation "+simClass.getName()+". Exception trace follows.");
            e.printStackTrace();
        }
        return null;
    }

    public void setProgressView(TextView tv) {
        progressText = tv;
    }

    @Override
    protected void onProgressUpdate(String... progress) {
        progressText.setText(progress[0]);
    }
}
